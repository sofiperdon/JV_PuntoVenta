@model JV_PuntoVenta.Models.Venta

@{
    ViewData["Title"] = "Create";
    var productosPrecios = ViewBag.ProductosPrecios as Dictionary<int, decimal>;
}

<div class="m-3">
    <h1>NUEVA VENTA</h1>
    <hr />
    <div class="row">
        <div class="col-md-12">
            <form method="post" asp-action="Create">
                <div class="row" style="height:70px;width:700px;">
                    <div class="form-group col col-6">
                        <label asp-for="TransactionDateTime" class="control-label">Fecha y hora</label>
                        <input asp-for="TransactionDateTime" id="TransactionDateTime" class="form-control" />
                        <span asp-validation-for="TransactionDateTime" class="text-danger"></span>
                    </div>
                    <div class="form-group col col-6">
                        <label asp-for="Total" class="control-label">Total</label>
                        <input asp-for="Total" id="Total" class="form-control" readonly />
                        <span asp-validation-for="Total" class="text-danger"></span>
                    </div>
                </div>
                <hr />
                <h4>Productos</h4>
                <div id="productosContainer" class="border p-2" style="height:250px;width:700px; overflow-y:scroll; overflow-x:hidden;">
                    <div class="form-group p-1 row producto-item">
                        <div class="col col-4">
                            <label class="control-label">Producto</label>
                            <select name="ProductoId[0]" class="form-control producto-select" asp-items="ViewBag.Productos"></select>
                        </div>
                        <div class="col col-2">
                            <label class="control-label">Cantidad</label>
                            <input name="Cantidad[0]" type="number" class="form-control cantidad-input" />
                        </div>
                        <div class="col col-2">
                            <label class="control-label">Precio</label>
                            <input name="Precio[0]" class="form-control precio-input" readonly />
                        </div>
                        <div class="col col-2">
                            <label class="control-label">Subtotal</label>
                            <input name="Subtotal[0]" class="form-control subtotal-input" readonly />
                        </div>
                        <div class="col col-2 d-flex align-items-end">
                            <button type="button" class="btn btn-danger eliminar-producto">Eliminar</button>
                        </div>
                    </div>
                </div>

                <div class="form-group my-3">
                    <button type="button" id="addProducto" class="btn btn-secondary">Agregar Producto</button>
                </div>
                <hr />

                <div class="form-group">
                    <input type="submit" value="Crear" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Volver</a>
    </div>
</div>

<template id="plantillaProducto">
    <div class="form-group p-1 row producto-item">
        <div class="col col-4">
            <label class="control-label">Producto</label>
            <select class="form-control producto-select" asp-items="ViewBag.Productos"></select>
        </div>
        <div class="col col-2">
            <label class="control-label">Cantidad</label>
            <input class="form-control cantidad-input" type="number" />
        </div>
        <div class="col col-2">
            <label class="control-label">Precio</label>
            <input class="form-control precio-input" readonly />
        </div>
        <div class="col col-2">
            <label class="control-label">Subtotal</label>
            <input class="form-control subtotal-input" readonly />
        </div>
        <div class="col col-2 d-flex align-items-end">
            <button type="button" class="btn btn-danger eliminar-producto">Eliminar</button>
        </div>
    </div>
</template>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('TransactionDateTime').value = new Date().toISOString().slice(0, 16);

        var productoIndex = 1;
        var productosPrecios = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(productosPrecios));

        document.getElementById('addProducto').addEventListener('click', function () {
            nuevoProducto();
        });

        function nuevoProducto(codBarra) {

            if (codBarra && !productosPrecios[codBarra]) {
                alert('Producto no encontrado');
                return;
            }

            var container = document.getElementById('productosContainer');
            var plantilla = document.getElementById('plantillaProducto').content.cloneNode(true);

            var select = plantilla.querySelector('select');
            var cantidadInput = plantilla.querySelector('.cantidad-input');
            var precioInput = plantilla.querySelector('.precio-input');
            var subtotalInput = plantilla.querySelector('.subtotal-input');
            var eliminarButton = plantilla.querySelector('.eliminar-producto');

            if (select && cantidadInput && precioInput && subtotalInput) {
                select.name = 'ProductoId[' + productoIndex + ']';
                cantidadInput.name = 'Cantidad[' + productoIndex + ']';
                precioInput.name = 'Precio[' + productoIndex + ']';
                subtotalInput.name = 'Subtotal[' + productoIndex + ']';

                eliminarButton.addEventListener('click', function () {
                    plantilla.remove();
                    actualizarTotal();
                });

                if (codBarra) {
                    select.value = codBarra;
                    cantidadInput.value = 1;
                }
            }

            container.appendChild(plantilla);
            productoIndex++;
            escucharEventos();
            actualizarTotal();
            container.scrollTop = container.scrollHeight;
        }

        function escucharEventos() {
            var productoSelects = document.querySelectorAll('.producto-select');
            var cantidadInputs = document.querySelectorAll('.cantidad-input');
            var eliminarButtons = document.querySelectorAll('.eliminar-producto');

            productoSelects.forEach(function (select) {
                select.addEventListener('change', actualizarTotal);
            });

            cantidadInputs.forEach(function (input) {
                input.addEventListener('input', actualizarTotal);
            });

            eliminarButtons.forEach(function (button) {
                button.addEventListener('click', function () {
                    button.closest('.producto-item').remove();
                    actualizarTotal();
                });
            });
        }

        function actualizarTotal() {
            var productoSelects = document.querySelectorAll('.producto-select');
            var cantidadInputs = document.querySelectorAll('.cantidad-input');
            var total = 0;

            for (var i = 0; i < productoSelects.length; i++) {
                var productoId = productoSelects[i].value;
                var cantidad = parseFloat(cantidadInputs[i].value) || 0;

                if (productoId && productosPrecios[productoId]) {
                    var price = productosPrecios[productoId];
                    document.getElementsByName('Precio[' + i + ']')[0].value = price.toFixed(2);
                    var subtotal = price * cantidad;
                    document.getElementsByName('Subtotal[' + i + ']')[0].value = subtotal.toFixed(2);
                    total += subtotal;
                }
            }

            document.getElementById('Total').value = total.toFixed(2);
        }

        document.addEventListener('DOMContentLoaded', function () {
            escucharEventos();
            actualizarTotal();
        });

        // Escaneo de código de barras
        var codBarra = '';
        document.addEventListener('keydown', function (e) {
            if (e.key === 'Enter') {
                if (codBarra.length > 0) {
                    nuevoProducto(codBarra);
                    codBarra = '';
                }
            } else if (/^[0-9]$/.test(e.key)) {
                codBarra += e.key;
            }
        });
    </script>
}
